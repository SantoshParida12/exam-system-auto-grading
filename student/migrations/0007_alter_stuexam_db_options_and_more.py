# Generated by Django 5.2.3 on 2025-09-13 14:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0015_alter_exam_model_end_time_alter_exam_model_id_and_more'),
        ('student', '0006_remove_subjectiveanswer_score_subjectiveanswer_marks'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='stuexam_db',
            options={'ordering': ['-completed_at', '-started_at'], 'verbose_name': 'Student Exam', 'verbose_name_plural': 'Student Exams'},
        ),
        migrations.AlterModelOptions(
            name='subjectiveanswer',
            options={'ordering': ['-submitted_at'], 'verbose_name': 'Subjective Answer', 'verbose_name_plural': 'Subjective Answers'},
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='is_graded',
            field=models.BooleanField(default=False, help_text='Whether the exam has been graded'),
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='percentage',
            field=models.FloatField(default=0.0, help_text='Percentage score'),
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='started_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='time_taken',
            field=models.DurationField(blank=True, help_text='Time taken to complete the exam', null=True),
        ),
        migrations.AddField(
            model_name='stuexam_db',
            name='total_marks_possible',
            field=models.IntegerField(default=0, help_text='Total marks possible for this exam'),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='graded_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='graded_by',
            field=models.ForeignKey(blank=True, help_text='Teacher who graded this answer', limit_choices_to={'groups__name': 'Professor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_subjective_answers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='is_auto_graded',
            field=models.BooleanField(default=False, help_text='Whether this answer was auto-graded'),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='is_teacher_graded',
            field=models.BooleanField(default=False, help_text='Whether this answer was graded by teacher'),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='max_marks',
            field=models.IntegerField(default=5, help_text='Maximum marks for this question'),
        ),
        migrations.AddField(
            model_name='subjectiveanswer',
            name='teacher_feedback',
            field=models.TextField(blank=True, help_text='Additional feedback from teacher', null=True),
        ),
        migrations.AlterField(
            model_name='stuexam_db',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='sturesults_db',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='subjectiveanswer',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='subjectiveanswer',
            name='marks',
            field=models.IntegerField(default=0, help_text='Marks awarded'),
        ),
        migrations.AlterUniqueTogether(
            name='subjectiveanswer',
            unique_together={('question', 'student')},
        ),
        migrations.CreateModel(
            name='ExamResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_questions', models.IntegerField(default=0)),
                ('questions_attempted', models.IntegerField(default=0)),
                ('questions_correct', models.IntegerField(default=0)),
                ('questions_partial', models.IntegerField(default=0)),
                ('questions_incorrect', models.IntegerField(default=0)),
                ('total_score', models.IntegerField(default=0)),
                ('max_possible_score', models.IntegerField(default=0)),
                ('percentage', models.FloatField(default=0.0)),
                ('grade_letter', models.CharField(default='F', max_length=2)),
                ('time_taken', models.DurationField(blank=True, null=True)),
                ('completion_rate', models.FloatField(default=0.0, help_text='Percentage of questions attempted')),
                ('accuracy_rate', models.FloatField(default=0.0, help_text='Percentage of correct answers')),
                ('is_completed', models.BooleanField(default=False)),
                ('is_graded', models.BooleanField(default=False)),
                ('is_passed', models.BooleanField(default=False, help_text='Whether student passed the exam')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam_model')),
                ('student', models.ForeignKey(limit_choices_to={'groups__name': 'Student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student_exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.stuexam_db')),
            ],
            options={
                'verbose_name': 'Exam Result',
                'verbose_name_plural': 'Exam Results',
                'ordering': ['-completed_at', '-started_at'],
                'unique_together': {('exam', 'student')},
            },
        ),
    ]
